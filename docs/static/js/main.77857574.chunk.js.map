{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifts","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAKaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,sBAAQC,SATS,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAIP,GAAJ,mBAAkBO,OACpCN,EAAc,MAIlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCVlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAICI,MAAMF,GAJP,cAIbG,EAJa,gBAKGA,EAAKC,OALR,uBAKZC,EALY,EAKZA,KAEDC,EAAQD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAeZM,GAfY,4CAAH,sDCEPO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAElC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,kCAAKA,EAAL,WCHCO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAGrB,ECFwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAXAC,qBAAW,WAEPxB,EAAQC,GACHwB,MAAK,SAAAd,GAAG,OAAIY,EAAS,CAClBf,KAAKG,EACLU,SAAQ,SAGlB,CAAEpB,IAGGqB,EDjBsBI,CAAazB,GAA7BU,EAAb,EAAQH,KAAUa,EAAlB,EAAkBA,QAElB,OACI,qCACA,qBAAIJ,UAAU,oCAAd,cAAoDhB,EAApD,OACCoB,GAAW,mBAAGJ,UAAU,wCAAb,qBACZ,qBAAKA,UAAU,YAAf,SAEYN,EAAID,KAAI,SAACC,GAAD,OACJ,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEYtBe,EAxBM,WAEjB,MAAoCxC,mBAAU,CAAC,YAA/C,mBAAOyC,EAAP,KAAmB1C,EAAnB,KAGA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEI0C,EAAWlB,KAAI,SAACT,GAAD,OACX,cAAC,EAAD,CAEIA,SAAUA,GADHA,Y,MCf/B4B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.77857574.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e)=>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2){\r\n            setCategories(cats=> [inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n    return (               \r\n        <form   onSubmit={handleSubmit} >\r\n            <input \r\n                type=\"text\" \r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories:PropTypes.func.isRequired\r\n}\r\n\r\n\r\n","export const getGifs = async( category ) =>{\r\n        \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=2A8ET6gNPsP7TWlrIueooVXHqozYcdZr`;\r\n\r\n    const resp  = await fetch(url);\r\n    const {data}  = await resp.json();\r\n\r\n    const gifts = data.map(img => {\r\n        return {\r\n            id:img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    \r\n    return gifts;\r\n};\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title }/>\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    \r\n    // const [images, setImages] = useState([]);\r\n    const { data:img, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\"> {category} </h3>\r\n        {loading && <p className=\"card animate__animated animate__flash\">Loading</p> }\r\n        <div className=\"card-grid\">           \r\n                {\r\n                    img.map((img) =>(\r\n                        <GifGridItem\r\n                            key={img.id} \r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n","import { useEffect, useState } from \"react\"\r\n\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n        \r\n    useEffect( ()=>{\r\n        \r\n        getGifs(category)\r\n            .then(img => setState({\r\n                data:img,\r\n                loading:false\r\n                })\r\n            );\r\n    },[ category]);\r\n\r\n\r\n    return state;\r\n\r\n}\r\n\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = ()=> {\r\n\r\n    const [categories, setCategories] = useState( ['Pokemon']);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n\r\n            <ol>\r\n                {\r\n                categories.map((category) =>(\r\n                    <GifGrid\r\n                        key = {category}\r\n                        category={category} />                 \r\n                ))\r\n                 }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}